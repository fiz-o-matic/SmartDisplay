; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
;default_envs = FW_BETA
;default_envs = FW_GAMMA
default_envs = DEBUG
;default_envs = FW_GPS_SH1106_TYP2
;default_envs = FW_GPS_DOGS102_TYP2

src_dir = ./src/SmartDisplay/
build_dir = ./build/


[env]
monitor_speed = 115200


lib_deps =
	olikraus/U8g2@^2.28.8
	;sandeepmistry/CAN@^0.3.1
	mikalhart/TinyGPSPlus
	paulstoffregen/OneWire@^2.3.6
	;milesburton/DallasTemperature
	pierremolinaro/ACAN2515@^2.1.2
	pstolarz/OneWireNg@^0.13.2
	;sparkfun/SparkFun u-blox GNSS Arduino Library@^2.2.25


[env:DEBUG]
platform = atmelmegaavr
framework = arduino

; Chip in use
board = ATmega4808
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
; Arduino pinout variant
board_build.variant = 32pin-standard

; Extra build flags
build_flags = -w -Os -DDEBUG -DHW_GAMMA

; Upload protocol for serial uploads (using Optiboot)
upload_protocol = arduino
upload_flags =
;upload_port = /dev/cu.usbserial-AQ00J9LB
;upload_port = /dev/cu.usbserial*

[env:DEBUG2]
platform = atmelmegaavr
board = ATmega4809
;platform = atmelavr
;board = uno
framework = arduino
;build_flags = -w -DDEBUG -DSW_CAN -DSH1106
;build_flags = -w -DDEBUG
build_flags = -w -Os -DSW_CAN -DSH1107_M32
;build_flags = -w

;EA Programm

[env:FW_GAMMA]
platform = atmelmegaavr
framework = arduino

; Chip in use
board = ATmega4808
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
; Arduino pinout variant
board_build.variant = 32pin-standard


; Extra build flags
;build_flags = -w -Os -DDEBUG -DHW_GAMMA
build_flags = -w -Os -DHW_GAMMA

; Upload protocol for serial uploads (using Optiboot)
upload_protocol = arduino
upload_flags =
upload_port = /dev/cu.usbserial*


[env:FW_BETA]
platform = atmelmegaavr
framework = arduino

; Chip in use
board = ATmega4808
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
; Arduino pinout variant
board_build.variant = 32pin-standard

; Extra build flags
;build_flags = -w -Os -DDEBUG -DHW_BETA
build_flags = -w -Os -DHW_BETA

; Upload protocol for serial uploads (using Optiboot)
upload_protocol = arduino
upload_flags =
upload_port = /dev/cu.usbserial*


[env:FW_ALPHA_OLED]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -Os -DHW_ALPHA_OLED

[env:FW_ALPHA_LCD]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -Os -DHW_ALPHA_LCD

[env:FW_ALPHA_LCD_DEBUG]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -Os -DHW_ALPHA_LCD -DDEBUG


[env:FW_CAN_SH1106_TYP2]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -DSW_CAN -DSH1106

[env:FW_GPS_SH1106_TYP2]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -DSW_GPS -DSH1106

[env:FW_GPS_DOGS102_TYP2]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -DSW_GPS -DDOGS102_T25

[env:FW_CAN_SH1107_TYP2]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -DSW_CAN -DSH1107

[env:FW_GPS_SH1107_TYP2]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -DSW_GPS -DSH1107

[env:FW_CAN_DOGS102_TYP2]
platform = atmelavr
board = uno
framework = arduino
build_flags = -w -DSW_CAN -DDOGS102_T25


; Run the following command to upload with this environment
; pio run -e Upload_UPDI -t upload
[env:Upload_UPDI]
platform = atmelmegaavr
framework = arduino

; Chip in use
board = ATmega4808
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
; Arduino pinout variant
board_build.variant = 32pin-standard

; Extra build flags
build_flags = -w -Os -DDEBUG -DHW_BETA
; Upload protocol for UPDI upload
upload_protocol = atmelice_updi
upload_flags =


; Run the following command to upload with this environment
; pio run -e Upload_UART -t upload
[env:Upload_UART]
platform = atmelmegaavr
framework = arduino

; Chip in use
board = ATmega4808
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
; Arduino pinout variant
board_build.variant = 32pin-standard

; Extra build flags
build_flags = -w -Os -DDEBUG -DHW_BETA

; Upload protocol for serial uploads (using Optiboot)
upload_protocol = arduino
upload_flags =
upload_port = /dev/cu.usbserial*


; run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
[env:fuses_bootloader]
platform = atmelmegaavr
framework = arduino

; Chip in use
board = ATmega4808
; Clock frequency in [Hz]
board_build.f_cpu = 16000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
; Arduino pinout variant
board_build.variant = 32pin-standard

; Extra build flags
;build_flags = -w -Os -DDEBUG -DHW_BETA
; Upload protocol for used to set fuses/bootloader
;upload_protocol = ${env:Upload_UPDI.upload_protocol}
upload_protocol = atmelice_updi
;upload_flags = "-n -v -v -v -v"
; Hardware settings
board_hardware.bod = disabled
;board_hardware.bod = 2.7v
board_hardware.eesave = yes
board_hardware.uart = uart0
board_hardware.rstpin = reset



[env:custom_fuses]
platform = atmelmegaavr
framework = arduino
board = ATmega4808
upload_protocol = xplainedmini_updi
board_fuses.bootend = 0xAA
board_fuses.syscfg0 = 0xBB
board_fuses.osccfg = 0xCC